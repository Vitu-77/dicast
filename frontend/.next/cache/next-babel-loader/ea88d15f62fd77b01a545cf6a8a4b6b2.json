{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Cookies from 'js-cookie';\nimport Axios from 'axios';\nimport Router from 'next/router';\nvar Fetch = Axios.create({\n  baseURL: 'http://localhost:3333'\n});\nexport default {\n  isAuthenticated: function () {\n    var _isAuthenticated = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(setLoading) {\n      var token, response, _isAuthenticated2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log();\n              token = Cookies.get('DICAST_AUTH_TOKEN');\n\n              if (!(token === undefined || token === null || token === '')) {\n                _context.next = 7;\n                break;\n              }\n\n              Router.push('/login');\n              return _context.abrupt(\"return\", false);\n\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return Axios.get('http://localhost:3333/is_authenticated', {\n                headers: {\n                  token: token\n                }\n              });\n\n            case 10:\n              response = _context.sent;\n              _isAuthenticated2 = response.data.isAuthenticated;\n\n              if (_isAuthenticated2) {\n                _context.next = 17;\n                break;\n              }\n\n              Router.push('/login');\n              return _context.abrupt(\"return\", false);\n\n            case 17:\n              return _context.abrupt(\"return\", true);\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](7);\n              Router.push('/login');\n              return _context.abrupt(\"return\", false);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 20]]);\n    }));\n\n    function isAuthenticated(_x) {\n      return _isAuthenticated.apply(this, arguments);\n    }\n\n    return isAuthenticated;\n  }(),\n  authenticate: function () {\n    var _authenticate = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(username, password, _setUser) {\n      var _ref, data, user, auth;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Fetch.post('/authenticate', {\n                username: username,\n                password: password\n              });\n\n            case 2:\n              _ref = _context2.sent;\n              data = _ref.data;\n              user = data.user, auth = data.auth;\n\n              _setUser(user);\n\n              Cookies.set('DICAST_AUTH_TOKEN', auth);\n              Cookies.set('USERNAME', user.username); //TODO Cookies.set('ACESS_LEVEL', user.acess_level);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function authenticate(_x2, _x3, _x4) {\n      return _authenticate.apply(this, arguments);\n    }\n\n    return authenticate;\n  }(),\n  getUser: function () {\n    var _getUser = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(userId, setUser) {\n      var _ref2, data, user;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Fetch.get(\"/users?user_id=\".concat(userId));\n\n            case 2:\n              _ref2 = _context3.sent;\n              data = _ref2.data;\n              user = data.user;\n              setUser(user);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getUser(_x5, _x6) {\n      return _getUser.apply(this, arguments);\n    }\n\n    return getUser;\n  }()\n};","map":{"version":3,"sources":["C:/Users/marce/Programação/Projetos/dicast/frontend/services/Api.js"],"names":["Cookies","Axios","Router","Fetch","create","baseURL","isAuthenticated","setLoading","console","log","token","get","undefined","push","headers","response","data","authenticate","username","password","_setUser","post","user","auth","set","getUser","userId","setUser"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAd;AAEA,eAAe;AACLC,EAAAA,eADK;AAAA;AAAA;AAAA,8CACWC,UADX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGPC,cAAAA,OAAO,CAACC,GAAR;AAEMC,cAAAA,KALC,GAKOV,OAAO,CAACW,GAAR,CAAY,mBAAZ,CALP;;AAAA,oBAOHD,KAAK,KAAKE,SAAV,IAAuBF,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAPhD;AAAA;AAAA;AAAA;;AAQHR,cAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AARG,+CASI,KATJ;;AAAA;AAAA;AAAA;AAAA,qBAawBZ,KAAK,CAACU,GAAN,CAAU,wCAAV,EAAoD;AACvEG,gBAAAA,OAAO,EAAE;AAAEJ,kBAAAA,KAAK,EAALA;AAAF;AAD8D,eAApD,CAbxB;;AAAA;AAaOK,cAAAA,QAbP;AAiBST,cAAAA,iBAjBT,GAiB6BS,QAAQ,CAACC,IAjBtC,CAiBSV,eAjBT;;AAAA,kBAmBMA,iBAnBN;AAAA;AAAA;AAAA;;AAoBKJ,cAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AApBL,+CAqBY,KArBZ;;AAAA;AAAA,+CAwBY,IAxBZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BCX,cAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ;AA3BD,+CA4BQ,KA5BR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCLI,EAAAA,YAjCK;AAAA;AAAA;AAAA,+CAiCQC,QAjCR,EAiCkBC,QAjClB,EAiC4BC,QAjC5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAkCgBjB,KAAK,CAACkB,IAAN,CAAW,eAAX,EAA4B;AAAEH,gBAAAA,QAAQ,EAARA,QAAF;AAAYC,gBAAAA,QAAQ,EAARA;AAAZ,eAA5B,CAlChB;;AAAA;AAAA;AAkCCH,cAAAA,IAlCD,QAkCCA,IAlCD;AAoCCM,cAAAA,IApCD,GAoCgBN,IApChB,CAoCCM,IApCD,EAoCOC,IApCP,GAoCgBP,IApChB,CAoCOO,IApCP;;AAsCPH,cAAAA,QAAQ,CAACE,IAAD,CAAR;;AACAtB,cAAAA,OAAO,CAACwB,GAAR,CAAY,mBAAZ,EAAiCD,IAAjC;AACAvB,cAAAA,OAAO,CAACwB,GAAR,CAAY,UAAZ,EAAwBF,IAAI,CAACJ,QAA7B,EAxCO,CAyCP;;AAzCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4CLO,EAAAA,OA5CK;AAAA;AAAA;AAAA,+CA4CGC,MA5CH,EA4CWC,OA5CX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA6CgBxB,KAAK,CAACQ,GAAN,0BAA4Be,MAA5B,EA7ChB;;AAAA;AAAA;AA6CCV,cAAAA,IA7CD,SA6CCA,IA7CD;AA+CCM,cAAAA,IA/CD,GA+CUN,IA/CV,CA+CCM,IA/CD;AAiDPK,cAAAA,OAAO,CAACL,IAAD,CAAP;;AAjDO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import Cookies from 'js-cookie';\r\nimport Axios from 'axios';\r\nimport Router from 'next/router'\r\n\r\nconst Fetch = Axios.create({ baseURL: 'http://localhost:3333' });\r\n\r\nexport default {\r\n    async isAuthenticated(setLoading) {\r\n\r\n        console.log();\r\n\r\n        const token = Cookies.get('DICAST_AUTH_TOKEN');\r\n\r\n        if (token === undefined || token === null || token === '') {\r\n            Router.push('/login');\r\n            return false;\r\n        }\r\n        else {\r\n            try {\r\n                const response = await Axios.get('http://localhost:3333/is_authenticated', {\r\n                    headers: { token }\r\n                });\r\n\r\n                const { isAuthenticated } = response.data;\r\n\r\n                if (!isAuthenticated) {\r\n                    Router.push('/login');\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            } catch (error) {\r\n                Router.push('/login');\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    async authenticate(username, password, _setUser) {\r\n        const { data } = await Fetch.post('/authenticate', { username, password });\r\n\r\n        const { user, auth } = data;\r\n\r\n        _setUser(user);\r\n        Cookies.set('DICAST_AUTH_TOKEN', auth);\r\n        Cookies.set('USERNAME', user.username);\r\n        //TODO Cookies.set('ACESS_LEVEL', user.acess_level);\r\n    },\r\n\r\n    async getUser(userId, setUser) {\r\n        const { data } = await Fetch.get(`/users?user_id=${userId}`);\r\n\r\n        const { user } = data;\r\n\r\n        setUser(user);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}