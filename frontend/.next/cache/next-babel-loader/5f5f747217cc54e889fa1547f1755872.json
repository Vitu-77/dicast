{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\Programa\\xE7\\xE3o\\\\Projetos\\\\dicast\\\\frontend\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport Api from '../services/Api';\nimport UserContext from '../global/contexts/UserContext';\nimport Head from 'next/head';\n\nconst Header = () => __jsx(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"CCCCC\"), __jsx(\"meta\", {\n  name: \"description\",\n  content: \"CCCCCCCCC\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  property: \"og:type\",\n  content: \"website\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"og:title\",\n  property: \"og:title\",\n  content: \"SSSSSS\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"og:description\",\n  property: \"og:description\",\n  content: \"SSSSS\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  property: \"og:site_name\",\n  content: \"SSS\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  property: \"og:url\",\n  content: \"SSSS\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:card\",\n  content: \"summary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:title\",\n  content: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:description\",\n  content: \"asxasxasx\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:site\",\n  content: \"asxasx\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:creator\",\n  content: \"xasxasx\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  property: \"og:image\",\n  content: \"xasxasx\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), __jsx(\"meta\", {\n  name: \"twitter:image\",\n  content: \"xasxasxasx\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}));\n\nconst Login = () => {\n  const {\n    _setUser,\n    showUser\n  } = useContext(UserContext);\n  const {\n    0: username,\n    1: setUsername\n  } = useState('Vitu_77sC');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('12345');\n  const {\n    0: authenticated,\n    1: setAuthenticated\n  } = useState(false);\n  const {\n    0: loading,\n    1: _setLoading\n  } = useState(true);\n  useEffect(() => {\n    const isAuthenticated = async () => {\n      const isAuthenticated = await Api.isAuthenticated();\n      (await isAuthenticated) === true ? setAuthenticated(true) : setAuthenticated(false);\n      setTimeout(() => _setLoading(false), 700);\n    };\n\n    isAuthenticated();\n  }, []);\n\n  const handleChange = event => {\n    const type = event.target.type;\n\n    switch (type) {\n      case 'text':\n        setUsername(event.target.value);\n        break;\n\n      case 'password':\n        setPassword(event.target.value);\n        break;\n\n      default:\n        console.log(event.target);\n        break;\n    }\n  };\n\n  const submit = () => Api.authenticate(username, password, _setUser);\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), loading ? __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Loading...\") : __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: handleChange,\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: handleChange,\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: submit,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Submit\"), __jsx(\"button\", {\n    onClick: showUser,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Show user\"), authenticated ? __jsx(\"button\", {\n    onClick: showUser,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"SAIR\") : __jsx(\"button\", {\n    onClick: showUser,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"ENTRAR\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/marce/Programação/Projetos/dicast/frontend/pages/login.js"],"names":["React","useState","useContext","useEffect","Api","UserContext","Head","Header","Login","_setUser","showUser","username","setUsername","password","setPassword","authenticated","setAuthenticated","loading","_setLoading","isAuthenticated","setTimeout","handleChange","event","type","target","value","console","log","submit","authenticate"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Api from '../services/Api';\r\nimport UserContext from '../global/contexts/UserContext';\r\nimport Head from 'next/head';\r\n\r\nconst Header = () => (\r\n    <Head>\r\n        <title>CCCCC</title>\r\n        <meta name=\"description\" content=\"CCCCCCCCC\" />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta name=\"og:title\" property=\"og:title\" content=\"SSSSSS\" />\r\n        <meta name=\"og:description\" property=\"og:description\" content=\"SSSSS\" />\r\n        <meta property=\"og:site_name\" content=\"SSS\" />\r\n        <meta property=\"og:url\" content=\"SSSS\" />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content=\"\" />\r\n        <meta name=\"twitter:description\" content=\"asxasxasx\" />\r\n        <meta name=\"twitter:site\" content=\"asxasx\" />\r\n        <meta name=\"twitter:creator\" content=\"xasxasx\" />\r\n        <meta property=\"og:image\" content=\"xasxasx\" />\r\n        <meta name=\"twitter:image\" content=\"xasxasxasx\" />\r\n    </Head>\r\n);\r\n\r\nconst Login = () => {\r\n\r\n    const { _setUser, showUser } = useContext(UserContext);\r\n\r\n    const [username, setUsername] = useState('Vitu_77sC');\r\n    const [password, setPassword] = useState('12345');\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n    const [loading, _setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const isAuthenticated = async () => {\r\n            const isAuthenticated = await Api.isAuthenticated();\r\n\r\n            await isAuthenticated === true ? setAuthenticated(true) : setAuthenticated(false);\r\n\r\n            setTimeout(() => _setLoading(false), 700);\r\n        }\r\n\r\n        isAuthenticated();\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        const type = event.target.type;\r\n\r\n        switch (type) {\r\n            case 'text': setUsername(event.target.value);\r\n                break;\r\n            case 'password': setPassword(event.target.value);\r\n                break;\r\n            default: console.log(event.target);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const submit = () => Api.authenticate(username, password, _setUser);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            {\r\n                loading\r\n                    ? <h1>Loading...</h1>\r\n                    :\r\n                    <React.Fragment>\r\n                        <form>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='username'\r\n                                onChange={handleChange}\r\n                                value={username}\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                placeholder='password'\r\n                                onChange={handleChange}\r\n                                value={password}\r\n                            />\r\n                            <button onClick={submit} type='button'>Submit</button>\r\n                            <button onClick={showUser} type='button'>Show user</button>\r\n                            {\r\n                                authenticated\r\n                                    ? <button onClick={showUser} type='button'>SAIR</button>\r\n                                    : <button onClick={showUser} type='button'>ENTRAR</button>\r\n                            }\r\n                        </form>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}