{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.2ba5b7cff975d6a18e5e.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Api from '../services/Api';\r\nimport UserContext from '../global/contexts/UserContext';\r\n\r\nconst Login = () => {\r\n\r\n    const { _setUser } = useContext(UserContext);\r\n\r\n    const [username, setUsername] = useState('Vitu_77sC');\r\n    const [password, setPassword] = useState('12345');\r\n    \r\n    const [persistLogged, setPersistLogged] = useState(false);\r\n    const [loginError, setLoginError] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const isAuthenticated = async () => await Api.isAuthenticated(setLoading, true);\r\n\r\n        isAuthenticated();\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        const type = event.target.type;\r\n\r\n        switch (type) {\r\n            case 'text': setUsername(event.target.value);\r\n                break;\r\n            case 'password': setPassword(event.target.value);\r\n                break;\r\n            default: console.log(event.target);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const submit = () => Api.authenticate(username, password, _setUser, setLoginError, persistLogged);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading\r\n                    ? <h1>Loading...</h1>\r\n                    :\r\n                    <React.Fragment>\r\n                        <form>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='username'\r\n                                onChange={handleChange}\r\n                                value={username}\r\n                            />\r\n                            <input\r\n                                type='password'\r\n                                placeholder='password'\r\n                                onChange={handleChange}\r\n                                value={password}\r\n                            />\r\n                            Remember me\r\n                            <input\r\n                                type='checkbox'\r\n                                onChange={() => setPersistLogged(!persistLogged)}\r\n                            />\r\n                            <button onClick={submit} type='button'>Submit</button>\r\n                            {\r\n                                loginError === 1 ? <span>AAAAA</span> : (\r\n                                    loginError === 2 ? <span>NBBBBBB</span> : null\r\n                                )\r\n                            }\r\n                        </form>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}